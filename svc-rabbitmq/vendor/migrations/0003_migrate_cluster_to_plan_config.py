# Generated by Django 4.2.17 on 2025-08-26 16:01
import json

from django.db import migrations


def migrate_cluster_to_plan(apps, schema_editor):
    # 获取历史模型（避免直接导入当前模型）
    Cluster = apps.get_model('vendor', 'Cluster')
    Plan = apps.get_model('paas_service', 'Plan')
    try:
        plan = Plan.objects.get(name='default')
    except Plan.DoesNotExist:
        # 非默认配置，跳过初始化
        return

    clusters = list(Cluster.objects.filter(enable=True))
    if not clusters:
        return

    if len(clusters) == 1:
        cluster = clusters[0]
        config = {
            "host": cluster.host,
            "port": cluster.port,
            "management_api": cluster.management_api,
            "admin": cluster.admin,
            "password": cluster.password,
            "version": cluster.version,
        }
        plan.config = json.dumps(config)
        plan.save(update_fields=["config"])
    else:
        configs = []
        for cluster in clusters:
            configs.append({
                "host": cluster.host,
                "port": cluster.port,
                "management_api": cluster.management_api,
                "admin": cluster.admin,
                "password": cluster.password,
                "version": cluster.version,
            })
        plan.config = json.dumps({"clusters": configs})
        plan.save(update_fields=["config"])


class Migration(migrations.Migration):
    dependencies = [
        ('vendor', '0002_auto_20191023_0644'),
    ]

    operations = [
        migrations.RunPython(migrate_cluster_to_plan)
    ]
